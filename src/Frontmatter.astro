---
import { logger } from '@it-astro:logger:astro-frontmatter-components';
import type { SchemaMeta } from './index';
import { getRegistry } from './index';
import { componentMap } from 'virtual:astro-components';

type Props = {
	blocks?: SchemaMeta[];
	callback?: (data: SchemaMeta, i: number) => void;
};
const { blocks, callback } = Astro.props;

if (blocks == null) {
	logger.warn('Provided data is null');
}

const registry = getRegistry();
---

{
	blocks?.map(async (props, i) => {
		const section = registry[props.type];
		if (callback) {
			callback(props, i);
		}

		const Component = componentMap[section.type];
		return <Component {...props} />;
	})
}
